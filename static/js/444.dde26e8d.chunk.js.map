{"version":3,"file":"static/js/444.dde26e8d.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/ListItemText/ListItemText.js","components/Info/ListElem/ListElem.jsx","components/Info/Info.jsx"],"sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"disableTypography\", \"inset\", \"primary\", \"primaryTypographyProps\", \"secondary\", \"secondaryTypographyProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport Typography from '../Typography';\nimport ListContext from '../List/ListContext';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport listItemTextClasses, { getListItemTextUtilityClass } from './listItemTextClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    inset,\n    primary,\n    secondary,\n    dense\n  } = ownerState;\n  const slots = {\n    root: ['root', inset && 'inset', dense && 'dense', primary && secondary && 'multiline'],\n    primary: ['primary'],\n    secondary: ['secondary']\n  };\n  return composeClasses(slots, getListItemTextUtilityClass, classes);\n};\n\nconst ListItemTextRoot = styled('div', {\n  name: 'MuiListItemText',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${listItemTextClasses.primary}`]: styles.primary\n    }, {\n      [`& .${listItemTextClasses.secondary}`]: styles.secondary\n    }, styles.root, ownerState.inset && styles.inset, ownerState.primary && ownerState.secondary && styles.multiline, ownerState.dense && styles.dense];\n  }\n})(({\n  ownerState\n}) => _extends({\n  flex: '1 1 auto',\n  minWidth: 0,\n  marginTop: 4,\n  marginBottom: 4\n}, ownerState.primary && ownerState.secondary && {\n  marginTop: 6,\n  marginBottom: 6\n}, ownerState.inset && {\n  paddingLeft: 56\n}));\nconst ListItemText = /*#__PURE__*/React.forwardRef(function ListItemText(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiListItemText'\n  });\n\n  const {\n    children,\n    className,\n    disableTypography = false,\n    inset = false,\n    primary: primaryProp,\n    primaryTypographyProps,\n    secondary: secondaryProp,\n    secondaryTypographyProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const {\n    dense\n  } = React.useContext(ListContext);\n  let primary = primaryProp != null ? primaryProp : children;\n  let secondary = secondaryProp;\n\n  const ownerState = _extends({}, props, {\n    disableTypography,\n    inset,\n    primary: !!primary,\n    secondary: !!secondary,\n    dense\n  });\n\n  const classes = useUtilityClasses(ownerState);\n\n  if (primary != null && primary.type !== Typography && !disableTypography) {\n    primary = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: dense ? 'body2' : 'body1',\n      className: classes.primary,\n      component: \"span\",\n      display: \"block\"\n    }, primaryTypographyProps, {\n      children: primary\n    }));\n  }\n\n  if (secondary != null && secondary.type !== Typography && !disableTypography) {\n    secondary = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: \"body2\",\n      className: classes.secondary,\n      color: \"text.secondary\",\n      display: \"block\"\n    }, secondaryTypographyProps, {\n      children: secondary\n    }));\n  }\n\n  return /*#__PURE__*/_jsxs(ListItemTextRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [primary, secondary]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemText.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Alias for the `primary` prop.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the children won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `children` (or `primary`) text, and optional `secondary` text\n   * with the Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * If `true`, the children are indented.\n   * This should be used if there is no left avatar or left icon.\n   * @default false\n   */\n  inset: PropTypes.bool,\n\n  /**\n   * The main content element.\n   */\n  primary: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the primary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  primaryTypographyProps: PropTypes.object,\n\n  /**\n   * The secondary content element.\n   */\n  secondary: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the secondary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  secondaryTypographyProps: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListItemText;","import { ListItem, Typography } from '@mui/material'\nimport React from 'react'\n\nconst ListElem = ({primary, percentage}) => {\n  return (\n    <ListItem sx={{display: \"flex\",pt:'20px', pb:'20px', alignItems:\"center\"}} className='borderG'  >\n        <Typography sx={{mr:'8px'}} color={\"#fff\"} fontSize={18} fontWeight={900}>{percentage}</Typography>\n        <Typography align={'center'} sx={{color: '#fff', fontSize:'15px', textAlign: 'left'}}>{primary}</Typography>\n    </ListItem>\n  )\n}\n\nexport default ListElem","import { Box, Container, List, ListItem, ListItemText, Typography} from '@mui/material'\nimport React from 'react'\nimport ListElem from './ListElem/ListElem'\n\nconst list = [\n  {\n    percentage: '10%',\n    id:1,\n    text: 'Design the NFT. Launch a community on Discord and Twitter. Launch the website.'\n  },\n  {\n    percentage: '20%',\n    id:2,\n    text: 'Launch the website advertising. Build White List.'\n  },\n  {\n    percentage: '30%',\n    id:3,\n    text: 'We promised to take our programmer to Hawaii'\n  },\n  {\n    percentage: '50%',\n    id:4,\n    text: 'Get 10,000 followers and start building a White List on Discord. Are we popular yet?'\n  },\n  {\n    percentage: '60%',\n    id:5,\n    text: \"Preparations are complete, let's get into action.\"\n  },\n  {\n    percentage: '80%',\n    id:6,\n    text: 'Launch minting among WL members.'\n  },\n  {\n    percentage: '90%',\n    id:7,\n    text: 'Create a community of NFT buyers'\n  },\n  {\n    percentage: '100%',\n    id:8,\n    text: 'Testing the metaverse NFT marketplace'\n  }\n]\n\nconst Info = () => {\n  return (\n    <Container sx={{display: 'flex', mt:'60px', justifyContent: 'center'}} maxWidth={'xl'}>\n        <Box sx={{ width: '100%', maxWidth: 360, bgcolor: '#2A093D', border: \"1px solid rgba(255, 255, 255, 0.24)\", boxShadow: '4px 4px 4px rgb(177 177 177 / 20%)' }}>\n            <List >\n                <ListItem className='borderA'  >\n                  <ListItemText>\n                  <Typography fontWeight={700} align={'center'} sx={{color: '#fff', textTransform:'uppercase',}}>Activating the Roadmap</Typography>\n                  </ListItemText>\n                </ListItem>\n              {\n                list.map(({percentage, text, id})=> <ListElem key={id} percentage={percentage} primary={text}/>)\n              }\n            </List>\n        </Box>\n    </Container>\n  )\n}\n\nexport default Info"],"names":["_excluded","ListItemTextRoot","styled","name","slot","overridesResolver","props","styles","ownerState","listItemTextClasses","primary","secondary","root","inset","multiline","dense","_extends","flex","minWidth","marginTop","marginBottom","paddingLeft","React","inProps","ref","useThemeProps","children","className","disableTypography","primaryProp","primaryTypographyProps","secondaryProp","secondaryTypographyProps","other","_objectWithoutPropertiesLoose","ListContext","classes","slots","composeClasses","getListItemTextUtilityClass","useUtilityClasses","type","Typography","_jsx","variant","component","display","color","_jsxs","clsx","percentage","ListItem","sx","pt","pb","alignItems","mr","fontSize","fontWeight","align","textAlign","list","id","text","Container","mt","justifyContent","maxWidth","Box","width","bgcolor","border","boxShadow","List","textTransform","map"],"sourceRoot":""}